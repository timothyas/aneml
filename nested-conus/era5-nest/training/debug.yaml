defaults:
- data: zarr
- dataloader: native_grid
- diagnostics: evaluation
- hardware: slurm
- graph: stretched_grid
- model: graphtransformer
- training: default
- _self_


no_validation: False

dataloader:
  dataset:
    cutout:
      - dataset: ${hardware.paths.data}/conus.zarr
      #thinning: ???
      - dataset: ${hardware.paths.data}/global.zarr
    adjust: all
    min_distance_km: 0
  batch_size:
    # note that the batch_size is set locally, so
    # global_batch_size = num_nodes * num_gpus_per_node * batch_size / num_gpus_per_model
    training: 1
    validation: 1
    test: 1
  training:
    start: 2017
    end: 2017
  validation:
    start: 2017
    end: 2017
  test:
    start: 2017
    end: 2017

hardware:
  num_gpus_per_model: 1
  paths:
    output: /pscratch/sd/t/timothys/aneml/nested-conus/era5-nest/training-output/
    data: /pscratch/sd/t/timothys/aneml/nested-conus/era5-nest/
    graph: /pscratch/sd/t/timothys/aneml/nested-conus/era5-nest/
  files:
    dataset: conus.zarr
    forcing_dataset: global.zarr

model:
  num_channels: 128
  processor:
    num_layers: 8

training:
  node_loss_weights:
    _target_: anemoi.training.losses.nodeweights.ReweightedGraphNodeAttribute
    target_nodes: ${graph.data}
    node_attribute: area_weight
    scaled_attribute: cutout_mask
    weight_frac_of_total: .8 #???
  max_steps: 1_000
